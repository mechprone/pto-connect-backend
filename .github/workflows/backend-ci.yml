name: Backend CI/CD

on:
  pull_request:
    paths:
      - 'pto-connect-backend/**'
      - '.github/workflows/backend-ci.yml'
  push:
    branches: [main]
    paths:
      - 'pto-connect-backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'pto-connect-backend/package-lock.json'
          
      - name: Install dependencies
        run: |
          cd pto-connect-backend
          npm ci
          
      - name: Run linter
        run: |
          cd pto-connect-backend
          npm run lint
          
      - name: Check for security vulnerabilities
        run: |
          cd pto-connect-backend
          npm audit --audit-level=high
          
  deploy-preview:
    name: Deploy Preview (PR)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: lint-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Comment PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 **Backend Preview Deployment**\n\nRailway will automatically create a preview deployment for this PR.\nCheck the Railway dashboard for the preview URL once deployment completes.'
            })
            
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: lint-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Notify deployment start
        run: |
          echo "🚀 Starting production deployment to Railway..."
          echo "Backend will be deployed to: https://api.ptoconnect.com"
          
      - name: Wait for Railway deployment
        run: |
          echo "⏳ Railway auto-deployment in progress..."
          echo "Monitor deployment status in Railway dashboard"
          
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: deploy-production
    
    steps:
      - name: Wait for deployment
        run: sleep 60
        
      - name: Check API health
        run: |
          echo "🔍 Checking API health..."
          
          # Check main health endpoint
          if curl -f -s https://api.ptoconnect.com/ > /dev/null; then
            echo "✅ Main health check passed"
          else
            echo "❌ Main health check failed"
            exit 1
          fi
          
          # Check if API is responding with expected content
          response=$(curl -s https://api.ptoconnect.com/)
          if [[ "$response" == *"PTO Connect API is running"* ]]; then
            echo "✅ API response check passed"
          else
            echo "❌ API response check failed"
            echo "Response: $response"
            exit 1
          fi
          
      - name: Notify success
        if: success()
        run: |
          echo "🎉 Backend deployment successful!"
          echo "API is live at: https://api.ptoconnect.com"
          
      - name: Notify failure
        if: failure()
        run: |
          echo "💥 Backend deployment health check failed!"
          echo "Please check Railway logs and API status"
          exit 1
